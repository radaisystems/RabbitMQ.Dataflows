name: NuGet Packages to Artifactory

on:
  push:
    branches:
      - main
      - release/*
      - jc/add-artifactory-publish-3
  pull_request:
    branches:
      - main
      - release/*

env:
  TAG_PREFIX: ${{ github.head_ref || github.ref_name }}
  NUGET_SCRATCH: 'local-omni-nuget-scratch'
  NUGET_STABLE: 'local-omni-nuget-stable'
  NUGET_RELEASE: 'local-omni-nuget-release'
  
jobs:
  build:
    name: Build & Test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x.x'

    - name: Install dependencies
      run: dotnet restore RabbitMQ.Dataflows.sln

    - name: Build
      run: dotnet build RabbitMQ.Dataflows.sln --configuration Release

    - name: Test
      run: dotnet test "./tests/UnitTests/UnitTests.csproj"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: publishedApp
        path: .

  deploy:
    name: 'Publish Nuget Scratch'
    runs-on: ubuntu-latest
    needs: build
    environment: scratch
    steps:
        - name: Download a Build Artifact
          uses: actions/download-artifact@v2.1.1
          with:
            name: publishedApp
        
        - uses: jfrog/setup-jfrog-cli@v3
          env:
            JF_URL: https://artifacts.radai.com/
            JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_PASSWORD_WRITE }}
        
        - name: Push to Artifactory
          run: |
            export repos=("${{ env.NUGET_SCRATCH }}")
            
            if [[ "${{ github.event_name }}" == 'push' ]]; then
              repos+=("${{ env.NUGET_STABLE }}")
              if [[ "${{ github.head_ref }}" != 'main' ]]; then
                repos+=("${{ env.NUGET_RELEASE }}")
              fi
            fi
            
            for repo in "${repos[@]}"; do
              echo "Pushing NuGet package to ${repo}..."
              export NUGET_REPO="${repo}"
              envsubst < .github/workflows/upload-spec.json > upload-spec.json
              jf c add "${NUGET_REPO}" --interactive=false
              jf rt u --spec=upload-spec.json
            done
